syntax = "proto3";
package uttt;

option go_package = "pkg/board";

// ==================================================
// ========== Internals Section ==========
// ==================================================
// these are just internals that can be accessed

// a single board coordinate;
// negative values = invalid
message Coord {
  int32 row = 1;
  int32 col = 2;
}

// a move has a large (outer) coordinate and a small (inner) coordinate
message Move {
  Coord large = 1;
  Coord small = 2;
}

// Who the owner of cell/space is
// 0 = None, 1 = Player 1, 2 = Player 2
enum Owner {
  NONE = 0;
  PLAYER1 = 1;
  PLAYER2 = 2;
}

// a space in a cell.
message Space { Owner val = 1; }

// a cell is a section of the gameboard, containing spaces
message Cell { repeated Space spaces = 1; }

// a Board is the entire gameboard, containing cells
message Board {
  repeated Cell cells = 1;
  Coord curCell = 2;
  int32 rows = 3;
  int32 cols = 4;
}

// ==================================================
// ========== Message Section ==========
// ==================================================
// these are messages that should be sent
// back and forth between the go program and calling code

// contains info about the current state of the game
// specificially; it contains the board, the owners of the cells,
// the current turn, the winner (if any), and whether or not
// the game is done
message StateMessage {
  Board board = 1;
  repeated Owner cellowners = 2;
  Owner turn = 3;
  Owner winner = 4;
  bool done = 5;
  repeated Move validmoves = 6;
}

// contains info about the action that will be taken
// Specifically, it contains a move
message ActionMessage { Move move = 1; }

// this should be sent after an action is taken
// it returns another state message as well as whether
// or not the move was valid
message ReturnMessage {
  StateMessage state = 1;
  bool valid = 2;
}